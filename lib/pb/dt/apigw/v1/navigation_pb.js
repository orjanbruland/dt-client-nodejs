/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.dt.apigw.v1.CreateViewCategoryRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.CreateViewRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.DeleteViewCategoryRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.DeleteViewRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.EditViewCategoryRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.EditViewRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.GetViewCategoryRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.GetViewRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.ListViewCategoriesRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.ListViewCategoriesResponse', null, global);
goog.exportSymbol('proto.dt.apigw.v1.ListViewsRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.ListViewsResponse', null, global);
goog.exportSymbol('proto.dt.apigw.v1.View', null, global);
goog.exportSymbol('proto.dt.apigw.v1.ViewCategory', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.ListViewsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.ListViewsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.ListViewsRequest.displayName = 'proto.dt.apigw.v1.ListViewsRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.ListViewsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.ListViewsRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: msg.getQuery(),
    pageSize: msg.getPageSize(),
    pageToken: msg.getPageToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.ListViewsRequest}
 */
proto.dt.apigw.v1.ListViewsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.ListViewsRequest;
  return proto.dt.apigw.v1.ListViewsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.ListViewsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.ListViewsRequest}
 */
proto.dt.apigw.v1.ListViewsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.ListViewsRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewsRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.ListViewsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewsRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.ListViewsRequest} The clone.
 */
proto.dt.apigw.v1.ListViewsRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.ListViewsRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.dt.apigw.v1.ListViewsRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListViewsRequest.prototype.setQuery = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 page_size = 2;
 * @return {number}
 */
proto.dt.apigw.v1.ListViewsRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.ListViewsRequest.prototype.setPageSize = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string page_token = 3;
 * @return {string}
 */
proto.dt.apigw.v1.ListViewsRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListViewsRequest.prototype.setPageToken = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.ListViewsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dt.apigw.v1.ListViewsResponse.repeatedFields_, null);
};
goog.inherits(proto.dt.apigw.v1.ListViewsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.ListViewsResponse.displayName = 'proto.dt.apigw.v1.ListViewsResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dt.apigw.v1.ListViewsResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.ListViewsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.ListViewsResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewsList: jspb.Message.toObjectList(msg.getViewsList(),
    proto.dt.apigw.v1.View.toObject, includeInstance),
    nextPageToken: msg.getNextPageToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.ListViewsResponse}
 */
proto.dt.apigw.v1.ListViewsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.ListViewsResponse;
  return proto.dt.apigw.v1.ListViewsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.ListViewsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.ListViewsResponse}
 */
proto.dt.apigw.v1.ListViewsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dt.apigw.v1.View;
      reader.readMessage(value,proto.dt.apigw.v1.View.deserializeBinaryFromReader);
      msg.getViewsList().push(value);
      msg.setViewsList(msg.getViewsList());
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.ListViewsResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewsResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.ListViewsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewsResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getViewsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dt.apigw.v1.View.serializeBinaryToWriter
    );
  }
  f = this.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.ListViewsResponse} The clone.
 */
proto.dt.apigw.v1.ListViewsResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.ListViewsResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated View views = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dt.apigw.v1.View>}
 */
proto.dt.apigw.v1.ListViewsResponse.prototype.getViewsList = function() {
  return /** @type{!Array.<!proto.dt.apigw.v1.View>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dt.apigw.v1.View, 1));
};


/** @param {Array.<!proto.dt.apigw.v1.View>} value  */
proto.dt.apigw.v1.ListViewsResponse.prototype.setViewsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.dt.apigw.v1.ListViewsResponse.prototype.clearViewsList = function() {
  this.setViewsList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.dt.apigw.v1.ListViewsResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListViewsResponse.prototype.setNextPageToken = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.CreateViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.CreateViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.CreateViewRequest.displayName = 'proto.dt.apigw.v1.CreateViewRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.CreateViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.CreateViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.CreateViewRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.CreateViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchQuery: msg.getSearchQuery(),
    name: msg.getName(),
    categoryId: msg.getCategoryId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.CreateViewRequest}
 */
proto.dt.apigw.v1.CreateViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.CreateViewRequest;
  return proto.dt.apigw.v1.CreateViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.CreateViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.CreateViewRequest}
 */
proto.dt.apigw.v1.CreateViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.CreateViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.CreateViewRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.CreateViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.CreateViewRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getSearchQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getCategoryId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.CreateViewRequest} The clone.
 */
proto.dt.apigw.v1.CreateViewRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.CreateViewRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string search_query = 1;
 * @return {string}
 */
proto.dt.apigw.v1.CreateViewRequest.prototype.getSearchQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateViewRequest.prototype.setSearchQuery = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dt.apigw.v1.CreateViewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateViewRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string category_id = 3;
 * @return {string}
 */
proto.dt.apigw.v1.CreateViewRequest.prototype.getCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateViewRequest.prototype.setCategoryId = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.GetViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.GetViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.GetViewRequest.displayName = 'proto.dt.apigw.v1.GetViewRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.GetViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.GetViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.GetViewRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.GetViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewId: msg.getViewId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.GetViewRequest}
 */
proto.dt.apigw.v1.GetViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.GetViewRequest;
  return proto.dt.apigw.v1.GetViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.GetViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.GetViewRequest}
 */
proto.dt.apigw.v1.GetViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.GetViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.GetViewRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.GetViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.GetViewRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getViewId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.GetViewRequest} The clone.
 */
proto.dt.apigw.v1.GetViewRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.GetViewRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string view_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.GetViewRequest.prototype.getViewId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.GetViewRequest.prototype.setViewId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.EditViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.EditViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.EditViewRequest.displayName = 'proto.dt.apigw.v1.EditViewRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.EditViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.EditViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.EditViewRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.EditViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewId: msg.getViewId(),
    searchQuery: msg.getSearchQuery(),
    name: msg.getName(),
    categoryId: msg.getCategoryId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.EditViewRequest}
 */
proto.dt.apigw.v1.EditViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.EditViewRequest;
  return proto.dt.apigw.v1.EditViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.EditViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.EditViewRequest}
 */
proto.dt.apigw.v1.EditViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchQuery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.EditViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.EditViewRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.EditViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.EditViewRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getViewId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getSearchQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getCategoryId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.EditViewRequest} The clone.
 */
proto.dt.apigw.v1.EditViewRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.EditViewRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string view_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.EditViewRequest.prototype.getViewId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.EditViewRequest.prototype.setViewId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string search_query = 2;
 * @return {string}
 */
proto.dt.apigw.v1.EditViewRequest.prototype.getSearchQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.EditViewRequest.prototype.setSearchQuery = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dt.apigw.v1.EditViewRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.EditViewRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string category_id = 4;
 * @return {string}
 */
proto.dt.apigw.v1.EditViewRequest.prototype.getCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.EditViewRequest.prototype.setCategoryId = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.DeleteViewRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.DeleteViewRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.DeleteViewRequest.displayName = 'proto.dt.apigw.v1.DeleteViewRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.DeleteViewRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.DeleteViewRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.DeleteViewRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.DeleteViewRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewId: msg.getViewId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.DeleteViewRequest}
 */
proto.dt.apigw.v1.DeleteViewRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.DeleteViewRequest;
  return proto.dt.apigw.v1.DeleteViewRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.DeleteViewRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.DeleteViewRequest}
 */
proto.dt.apigw.v1.DeleteViewRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.DeleteViewRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.DeleteViewRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.DeleteViewRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.DeleteViewRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getViewId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.DeleteViewRequest} The clone.
 */
proto.dt.apigw.v1.DeleteViewRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.DeleteViewRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string view_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.DeleteViewRequest.prototype.getViewId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.DeleteViewRequest.prototype.setViewId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.ListViewCategoriesRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.ListViewCategoriesRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.ListViewCategoriesRequest.displayName = 'proto.dt.apigw.v1.ListViewCategoriesRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.ListViewCategoriesRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.ListViewCategoriesRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parentId: msg.getParentId(),
    levelLimit: msg.getLevelLimit(),
    pageSize: msg.getPageSize(),
    pageToken: msg.getPageToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.ListViewCategoriesRequest}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.ListViewCategoriesRequest;
  return proto.dt.apigw.v1.ListViewCategoriesRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.ListViewCategoriesRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.ListViewCategoriesRequest}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevelLimit(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.ListViewCategoriesRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getLevelLimit();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.ListViewCategoriesRequest} The clone.
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.ListViewCategoriesRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string parent_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 level_limit = 2;
 * @return {number}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.getLevelLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.setLevelLimit = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 page_size = 3;
 * @return {number}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.setPageSize = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string page_token = 4;
 * @return {string}
 */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListViewCategoriesRequest.prototype.setPageToken = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.ListViewCategoriesResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dt.apigw.v1.ListViewCategoriesResponse.repeatedFields_, null);
};
goog.inherits(proto.dt.apigw.v1.ListViewCategoriesResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.ListViewCategoriesResponse.displayName = 'proto.dt.apigw.v1.ListViewCategoriesResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.ListViewCategoriesResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.ListViewCategoriesResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    categoriesList: jspb.Message.toObjectList(msg.getCategoriesList(),
    proto.dt.apigw.v1.ViewCategory.toObject, includeInstance),
    nextPageToken: msg.getNextPageToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.ListViewCategoriesResponse}
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.ListViewCategoriesResponse;
  return proto.dt.apigw.v1.ListViewCategoriesResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.ListViewCategoriesResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.ListViewCategoriesResponse}
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dt.apigw.v1.ViewCategory;
      reader.readMessage(value,proto.dt.apigw.v1.ViewCategory.deserializeBinaryFromReader);
      msg.getCategoriesList().push(value);
      msg.setCategoriesList(msg.getCategoriesList());
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.ListViewCategoriesResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getCategoriesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dt.apigw.v1.ViewCategory.serializeBinaryToWriter
    );
  }
  f = this.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.ListViewCategoriesResponse} The clone.
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.ListViewCategoriesResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated ViewCategory categories = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dt.apigw.v1.ViewCategory>}
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.getCategoriesList = function() {
  return /** @type{!Array.<!proto.dt.apigw.v1.ViewCategory>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dt.apigw.v1.ViewCategory, 1));
};


/** @param {Array.<!proto.dt.apigw.v1.ViewCategory>} value  */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.setCategoriesList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.clearCategoriesList = function() {
  this.setCategoriesList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListViewCategoriesResponse.prototype.setNextPageToken = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.CreateViewCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.CreateViewCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.CreateViewCategoryRequest.displayName = 'proto.dt.apigw.v1.CreateViewCategoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.CreateViewCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.CreateViewCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: msg.getName(),
    parentId: msg.getParentId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.CreateViewCategoryRequest}
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.CreateViewCategoryRequest;
  return proto.dt.apigw.v1.CreateViewCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.CreateViewCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.CreateViewCategoryRequest}
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.CreateViewCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.CreateViewCategoryRequest} The clone.
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.CreateViewCategoryRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string parent_id = 2;
 * @return {string}
 */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateViewCategoryRequest.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.GetViewCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.GetViewCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.GetViewCategoryRequest.displayName = 'proto.dt.apigw.v1.GetViewCategoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.GetViewCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.GetViewCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.GetViewCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.GetViewCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewCategoryId: msg.getViewCategoryId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.GetViewCategoryRequest}
 */
proto.dt.apigw.v1.GetViewCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.GetViewCategoryRequest;
  return proto.dt.apigw.v1.GetViewCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.GetViewCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.GetViewCategoryRequest}
 */
proto.dt.apigw.v1.GetViewCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.GetViewCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.GetViewCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.GetViewCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.GetViewCategoryRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getViewCategoryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.GetViewCategoryRequest} The clone.
 */
proto.dt.apigw.v1.GetViewCategoryRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.GetViewCategoryRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string view_category_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.GetViewCategoryRequest.prototype.getViewCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.GetViewCategoryRequest.prototype.setViewCategoryId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.EditViewCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.EditViewCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.EditViewCategoryRequest.displayName = 'proto.dt.apigw.v1.EditViewCategoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.EditViewCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.EditViewCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewCategoryId: msg.getViewCategoryId(),
    name: msg.getName(),
    parentId: msg.getParentId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.EditViewCategoryRequest}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.EditViewCategoryRequest;
  return proto.dt.apigw.v1.EditViewCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.EditViewCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.EditViewCategoryRequest}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewCategoryId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.EditViewCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.EditViewCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getViewCategoryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.EditViewCategoryRequest} The clone.
 */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.EditViewCategoryRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string view_category_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.getViewCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.setViewCategoryId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string parent_id = 3;
 * @return {string}
 */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.EditViewCategoryRequest.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.DeleteViewCategoryRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.DeleteViewCategoryRequest.displayName = 'proto.dt.apigw.v1.DeleteViewCategoryRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.DeleteViewCategoryRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.DeleteViewCategoryRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewCategoryId: msg.getViewCategoryId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.DeleteViewCategoryRequest}
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.DeleteViewCategoryRequest;
  return proto.dt.apigw.v1.DeleteViewCategoryRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.DeleteViewCategoryRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.DeleteViewCategoryRequest}
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setViewCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.DeleteViewCategoryRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getViewCategoryId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.DeleteViewCategoryRequest} The clone.
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.DeleteViewCategoryRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string view_category_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.DeleteViewCategoryRequest.prototype.getViewCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.DeleteViewCategoryRequest.prototype.setViewCategoryId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.View = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.View, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.View.displayName = 'proto.dt.apigw.v1.View';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.View.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.View.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.View} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.View.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    searchQuery: msg.getSearchQuery(),
    name: msg.getName(),
    categoryId: msg.getCategoryId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.View}
 */
proto.dt.apigw.v1.View.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.View;
  return proto.dt.apigw.v1.View.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.View} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.View}
 */
proto.dt.apigw.v1.View.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setSearchQuery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCategoryId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.View} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.View.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.View.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.View.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getSearchQuery();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = this.getCategoryId();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.View} The clone.
 */
proto.dt.apigw.v1.View.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.View} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.View.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.View.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string search_query = 2;
 * @return {string}
 */
proto.dt.apigw.v1.View.prototype.getSearchQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.View.prototype.setSearchQuery = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.dt.apigw.v1.View.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.View.prototype.setName = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string category_id = 4;
 * @return {string}
 */
proto.dt.apigw.v1.View.prototype.getCategoryId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.View.prototype.setCategoryId = function(value) {
  jspb.Message.setField(this, 4, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.ViewCategory = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.ViewCategory, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.ViewCategory.displayName = 'proto.dt.apigw.v1.ViewCategory';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.ViewCategory.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.ViewCategory.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.ViewCategory} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.ViewCategory.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    name: msg.getName(),
    parentId: msg.getParentId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.ViewCategory}
 */
proto.dt.apigw.v1.ViewCategory.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.ViewCategory;
  return proto.dt.apigw.v1.ViewCategory.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.ViewCategory} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.ViewCategory}
 */
proto.dt.apigw.v1.ViewCategory.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.ViewCategory} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ViewCategory.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.ViewCategory.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ViewCategory.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.ViewCategory} The clone.
 */
proto.dt.apigw.v1.ViewCategory.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.ViewCategory} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.ViewCategory.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ViewCategory.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dt.apigw.v1.ViewCategory.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ViewCategory.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string parent_id = 3;
 * @return {string}
 */
proto.dt.apigw.v1.ViewCategory.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ViewCategory.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 3, value);
};


goog.object.extend(exports, proto.dt.apigw.v1);
