/**
 * @fileoverview
 * @enhanceable
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_api_annotations_pb = require('../../../google/api/annotations_pb.js');
var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.exportSymbol('proto.dt.apigw.v1.CreateFolderRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.DeleteFolderRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.Folder', null, global);
goog.exportSymbol('proto.dt.apigw.v1.Folder.Metadata', null, global);
goog.exportSymbol('proto.dt.apigw.v1.GetFolderRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.ListFoldersRequest', null, global);
goog.exportSymbol('proto.dt.apigw.v1.ListFoldersResponse', null, global);
goog.exportSymbol('proto.dt.apigw.v1.MoveFolderRequest', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.ListFoldersRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.ListFoldersRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.ListFoldersRequest.displayName = 'proto.dt.apigw.v1.ListFoldersRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.ListFoldersRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.ListFoldersRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.ListFoldersRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: msg.getQuery(),
    parentId: msg.getParentId(),
    levelLimit: msg.getLevelLimit(),
    pageSize: msg.getPageSize(),
    pageToken: msg.getPageToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.ListFoldersRequest}
 */
proto.dt.apigw.v1.ListFoldersRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.ListFoldersRequest;
  return proto.dt.apigw.v1.ListFoldersRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.ListFoldersRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.ListFoldersRequest}
 */
proto.dt.apigw.v1.ListFoldersRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setQuery(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevelLimit(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.ListFoldersRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListFoldersRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getQuery();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getLevelLimit();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = this.getPageToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.ListFoldersRequest} The clone.
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.ListFoldersRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string query = 1;
 * @return {string}
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.getQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListFoldersRequest.prototype.setQuery = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string parent_id = 2;
 * @return {string}
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListFoldersRequest.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 level_limit = 3;
 * @return {number}
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.getLevelLimit = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.ListFoldersRequest.prototype.setLevelLimit = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 page_size = 4;
 * @return {number}
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.ListFoldersRequest.prototype.setPageSize = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string page_token = 5;
 * @return {string}
 */
proto.dt.apigw.v1.ListFoldersRequest.prototype.getPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListFoldersRequest.prototype.setPageToken = function(value) {
  jspb.Message.setField(this, 5, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.ListFoldersResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.dt.apigw.v1.ListFoldersResponse.repeatedFields_, null);
};
goog.inherits(proto.dt.apigw.v1.ListFoldersResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.ListFoldersResponse.displayName = 'proto.dt.apigw.v1.ListFoldersResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.dt.apigw.v1.ListFoldersResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.ListFoldersResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.ListFoldersResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.ListFoldersResponse} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.ListFoldersResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    foldersList: jspb.Message.toObjectList(msg.getFoldersList(),
    proto.dt.apigw.v1.Folder.toObject, includeInstance),
    nextPageToken: msg.getNextPageToken()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.ListFoldersResponse}
 */
proto.dt.apigw.v1.ListFoldersResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.ListFoldersResponse;
  return proto.dt.apigw.v1.ListFoldersResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.ListFoldersResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.ListFoldersResponse}
 */
proto.dt.apigw.v1.ListFoldersResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.dt.apigw.v1.Folder;
      reader.readMessage(value,proto.dt.apigw.v1.Folder.deserializeBinaryFromReader);
      msg.getFoldersList().push(value);
      msg.setFoldersList(msg.getFoldersList());
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextPageToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.ListFoldersResponse} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListFoldersResponse.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.ListFoldersResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.ListFoldersResponse.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFoldersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.dt.apigw.v1.Folder.serializeBinaryToWriter
    );
  }
  f = this.getNextPageToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.ListFoldersResponse} The clone.
 */
proto.dt.apigw.v1.ListFoldersResponse.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.ListFoldersResponse} */ (jspb.Message.cloneMessage(this));
};


/**
 * repeated Folder folders = 1;
 * If you change this array by adding, removing or replacing elements, or if you
 * replace the array itself, then you must call the setter to update it.
 * @return {!Array.<!proto.dt.apigw.v1.Folder>}
 */
proto.dt.apigw.v1.ListFoldersResponse.prototype.getFoldersList = function() {
  return /** @type{!Array.<!proto.dt.apigw.v1.Folder>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.dt.apigw.v1.Folder, 1));
};


/** @param {Array.<!proto.dt.apigw.v1.Folder>} value  */
proto.dt.apigw.v1.ListFoldersResponse.prototype.setFoldersList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


proto.dt.apigw.v1.ListFoldersResponse.prototype.clearFoldersList = function() {
  this.setFoldersList([]);
};


/**
 * optional string next_page_token = 2;
 * @return {string}
 */
proto.dt.apigw.v1.ListFoldersResponse.prototype.getNextPageToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.ListFoldersResponse.prototype.setNextPageToken = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.CreateFolderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.CreateFolderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.CreateFolderRequest.displayName = 'proto.dt.apigw.v1.CreateFolderRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.CreateFolderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.CreateFolderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.CreateFolderRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.CreateFolderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    parentId: msg.getParentId(),
    name: msg.getName(),
    description: msg.getDescription()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.CreateFolderRequest}
 */
proto.dt.apigw.v1.CreateFolderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.CreateFolderRequest;
  return proto.dt.apigw.v1.CreateFolderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.CreateFolderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.CreateFolderRequest}
 */
proto.dt.apigw.v1.CreateFolderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.CreateFolderRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.CreateFolderRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.CreateFolderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.CreateFolderRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.CreateFolderRequest} The clone.
 */
proto.dt.apigw.v1.CreateFolderRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.CreateFolderRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string parent_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.CreateFolderRequest.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateFolderRequest.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.dt.apigw.v1.CreateFolderRequest.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateFolderRequest.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.dt.apigw.v1.CreateFolderRequest.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 3, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.CreateFolderRequest.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 3, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.GetFolderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.GetFolderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.GetFolderRequest.displayName = 'proto.dt.apigw.v1.GetFolderRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.GetFolderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.GetFolderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.GetFolderRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.GetFolderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderId: msg.getFolderId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.GetFolderRequest}
 */
proto.dt.apigw.v1.GetFolderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.GetFolderRequest;
  return proto.dt.apigw.v1.GetFolderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.GetFolderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.GetFolderRequest}
 */
proto.dt.apigw.v1.GetFolderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.GetFolderRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.GetFolderRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.GetFolderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.GetFolderRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFolderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.GetFolderRequest} The clone.
 */
proto.dt.apigw.v1.GetFolderRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.GetFolderRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string folder_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.GetFolderRequest.prototype.getFolderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.GetFolderRequest.prototype.setFolderId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.DeleteFolderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.DeleteFolderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.DeleteFolderRequest.displayName = 'proto.dt.apigw.v1.DeleteFolderRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.DeleteFolderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.DeleteFolderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.DeleteFolderRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.DeleteFolderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderId: msg.getFolderId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.DeleteFolderRequest}
 */
proto.dt.apigw.v1.DeleteFolderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.DeleteFolderRequest;
  return proto.dt.apigw.v1.DeleteFolderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.DeleteFolderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.DeleteFolderRequest}
 */
proto.dt.apigw.v1.DeleteFolderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.DeleteFolderRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.DeleteFolderRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.DeleteFolderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.DeleteFolderRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFolderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.DeleteFolderRequest} The clone.
 */
proto.dt.apigw.v1.DeleteFolderRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.DeleteFolderRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string folder_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.DeleteFolderRequest.prototype.getFolderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.DeleteFolderRequest.prototype.setFolderId = function(value) {
  jspb.Message.setField(this, 1, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.MoveFolderRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.MoveFolderRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.MoveFolderRequest.displayName = 'proto.dt.apigw.v1.MoveFolderRequest';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.MoveFolderRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.MoveFolderRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.MoveFolderRequest} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.MoveFolderRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    folderId: msg.getFolderId(),
    parentId: msg.getParentId()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.MoveFolderRequest}
 */
proto.dt.apigw.v1.MoveFolderRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.MoveFolderRequest;
  return proto.dt.apigw.v1.MoveFolderRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.MoveFolderRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.MoveFolderRequest}
 */
proto.dt.apigw.v1.MoveFolderRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFolderId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.MoveFolderRequest} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.MoveFolderRequest.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.MoveFolderRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.MoveFolderRequest.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getFolderId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.MoveFolderRequest} The clone.
 */
proto.dt.apigw.v1.MoveFolderRequest.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.MoveFolderRequest} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string folder_id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.MoveFolderRequest.prototype.getFolderId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.MoveFolderRequest.prototype.setFolderId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string parent_id = 2;
 * @return {string}
 */
proto.dt.apigw.v1.MoveFolderRequest.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.MoveFolderRequest.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 2, value);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.Folder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.Folder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.Folder.displayName = 'proto.dt.apigw.v1.Folder';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.Folder.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.Folder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.Folder} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.Folder.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: msg.getId(),
    parentId: msg.getParentId(),
    level: msg.getLevel(),
    name: msg.getName(),
    description: msg.getDescription(),
    metadata: (f = msg.getMetadata()) && proto.dt.apigw.v1.Folder.Metadata.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.Folder}
 */
proto.dt.apigw.v1.Folder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.Folder;
  return proto.dt.apigw.v1.Folder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.Folder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.Folder}
 */
proto.dt.apigw.v1.Folder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setLevel(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 6:
      var value = new proto.dt.apigw.v1.Folder.Metadata;
      reader.readMessage(value,proto.dt.apigw.v1.Folder.Metadata.deserializeBinaryFromReader);
      msg.setMetadata(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.Folder} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.Folder.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.Folder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.Folder.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = this.getParentId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = this.getLevel();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = this.getDescription();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = this.getMetadata();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.dt.apigw.v1.Folder.Metadata.serializeBinaryToWriter
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.Folder} The clone.
 */
proto.dt.apigw.v1.Folder.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.Folder} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.dt.apigw.v1.Folder.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 1, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.Folder.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string parent_id = 2;
 * @return {string}
 */
proto.dt.apigw.v1.Folder.prototype.getParentId = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 2, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.Folder.prototype.setParentId = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 level = 3;
 * @return {number}
 */
proto.dt.apigw.v1.Folder.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.Folder.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional string name = 4;
 * @return {string}
 */
proto.dt.apigw.v1.Folder.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 4, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.Folder.prototype.setName = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string description = 5;
 * @return {string}
 */
proto.dt.apigw.v1.Folder.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldProto3(this, 5, ""));
};


/** @param {string} value  */
proto.dt.apigw.v1.Folder.prototype.setDescription = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional Metadata metadata = 6;
 * @return {proto.dt.apigw.v1.Folder.Metadata}
 */
proto.dt.apigw.v1.Folder.prototype.getMetadata = function() {
  return /** @type{proto.dt.apigw.v1.Folder.Metadata} */ (
    jspb.Message.getWrapperField(this, proto.dt.apigw.v1.Folder.Metadata, 6));
};


/** @param {proto.dt.apigw.v1.Folder.Metadata|undefined} value  */
proto.dt.apigw.v1.Folder.prototype.setMetadata = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.dt.apigw.v1.Folder.prototype.clearMetadata = function() {
  this.setMetadata(undefined);
};


/**
 * Returns whether this field is set.
 * @return{!boolean}
 */
proto.dt.apigw.v1.Folder.prototype.hasMetadata = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.dt.apigw.v1.Folder.Metadata = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.dt.apigw.v1.Folder.Metadata, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.dt.apigw.v1.Folder.Metadata.displayName = 'proto.dt.apigw.v1.Folder.Metadata';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.toObject = function(opt_includeInstance) {
  return proto.dt.apigw.v1.Folder.Metadata.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.dt.apigw.v1.Folder.Metadata} msg The msg instance to transform.
 * @return {!Object}
 */
proto.dt.apigw.v1.Folder.Metadata.toObject = function(includeInstance, msg) {
  var f, obj = {
    thingsCount: msg.getThingsCount(),
    thingsCountTotal: msg.getThingsCountTotal(),
    subfolderCount: msg.getSubfolderCount(),
    subfolderCountTotal: msg.getSubfolderCountTotal()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.dt.apigw.v1.Folder.Metadata}
 */
proto.dt.apigw.v1.Folder.Metadata.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.dt.apigw.v1.Folder.Metadata;
  return proto.dt.apigw.v1.Folder.Metadata.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.dt.apigw.v1.Folder.Metadata} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.dt.apigw.v1.Folder.Metadata}
 */
proto.dt.apigw.v1.Folder.Metadata.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThingsCount(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setThingsCountTotal(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubfolderCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubfolderCountTotal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Class method variant: serializes the given message to binary data
 * (in protobuf wire format), writing to the given BinaryWriter.
 * @param {!proto.dt.apigw.v1.Folder.Metadata} message
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.Folder.Metadata.serializeBinaryToWriter = function(message, writer) {
  message.serializeBinaryToWriter(writer);
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  this.serializeBinaryToWriter(writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the message to binary data (in protobuf wire format),
 * writing to the given BinaryWriter.
 * @param {!jspb.BinaryWriter} writer
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.serializeBinaryToWriter = function (writer) {
  var f = undefined;
  f = this.getThingsCount();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = this.getThingsCountTotal();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = this.getSubfolderCount();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = this.getSubfolderCountTotal();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
};


/**
 * Creates a deep clone of this proto. No data is shared with the original.
 * @return {!proto.dt.apigw.v1.Folder.Metadata} The clone.
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.cloneMessage = function() {
  return /** @type {!proto.dt.apigw.v1.Folder.Metadata} */ (jspb.Message.cloneMessage(this));
};


/**
 * optional int32 things_count = 1;
 * @return {number}
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.getThingsCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 1, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.Folder.Metadata.prototype.setThingsCount = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional int32 things_count_total = 2;
 * @return {number}
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.getThingsCountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 2, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.Folder.Metadata.prototype.setThingsCountTotal = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional int32 subfolder_count = 3;
 * @return {number}
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.getSubfolderCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 3, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.Folder.Metadata.prototype.setSubfolderCount = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional int32 subfolder_count_total = 4;
 * @return {number}
 */
proto.dt.apigw.v1.Folder.Metadata.prototype.getSubfolderCountTotal = function() {
  return /** @type {number} */ (jspb.Message.getFieldProto3(this, 4, 0));
};


/** @param {number} value  */
proto.dt.apigw.v1.Folder.Metadata.prototype.setSubfolderCountTotal = function(value) {
  jspb.Message.setField(this, 4, value);
};


goog.object.extend(exports, proto.dt.apigw.v1);
